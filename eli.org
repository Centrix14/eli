#+title: ELI (Early (and Experimental) LN Interpter)
#+author: Centrix14
#+startup: overview

Должен быть класс =Parser=, описывающий состояние парсера. Он: хранит в
себе буфер слова, выражения, источник данных, и проч. Источники данных
могут быть следующие: файл, строка.

Есть метод =pars-char= - он обрабатывает один символ, возвращая новое
состояние парсера. Есть макросы типа =with-pars-by-word= которые
позволяют вычислять какой-либо код после обработки очередного слова
(или другого объекта).

* Развитие ELI
** Версии
*** 0.1
- Парсит по словам

*** 0.2
- Парсит по последовательностям

** TODO Парсер [0/3]
- [-] Реализовать класс =parser=
- [ ] Реализовать функциональность парсинга по словам
- [ ] Реализовать функциональность парсинга последовательностей

* Парсер
** Класс =parser=
#+name: parser class
#+begin_src lisp :tangle src/parser/parser.lisp
  (defclass parser ()
	((buffer-word :reader parser-buffer-word
				  :initarg :buffer-word
				  :initform ""
				  :type string
				  :documentation "The word buffer")
	 (buffer-expression :reader parser-buffer-expression
						:initarg :buffer-expression
						:initform (make-array 0
											  :fill-pointer 0
											  :adjustable t
											  :element-type 'string)
						:type vector
						:documentation "The expression buffer")
	 (buffer-delimiter :reader parser-buffer-delimiter
					   :initarg :buffer-delimiter
					   :initform " "
					   :type string
					   :documentation "The buffer of delimiters")
	 (:documentation "The parser class")))
#+end_src
